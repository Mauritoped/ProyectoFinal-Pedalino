// CARRITO (calculadora)
const productos = {
  producto1: 0.00,
  producto2: 0.00,
  producto3: 0.00,
};

function actualizarProductos() {
  document.getElementById("producto1").textContent = productos.producto1.toFixed(2);
  document.getElementById("producto2").textContent = productos.producto2.toFixed(2);
  document.getElementById("producto3").textContent = productos.producto3.toFixed(2);
}

function calcularCostoTotal() {
  const costoTotal = productos.producto1 + productos.producto2 + productos.producto3;
  const costoTotalConSigno = "$" + costoTotal.toFixed(2);
  document.getElementById("resultado").textContent = costoTotalConSigno;
}

function reiniciarCalculadora() {
  productos.producto1 = 0.00;
  productos.producto2 = 0.00;
  productos.producto3 = 0.00;
  actualizarProductos();
  calcularCostoTotal();
}

function agregarProducto(desdeCategoria) {
  const precioProducto = parseFloat(desdeCategoria.getAttribute("data-producto"));
  const productosKeys = Object.keys(productos);
  for (let i = 0; i < productosKeys.length; i++) {
    const productoKey = productosKeys[i];
    if (productos[productoKey] === 0.00) {
      productos[productoKey] = precioProducto;
      break;
    }
  }
  actualizarProductos();
  calcularCostoTotal();
  Swal.fire({
    icon: 'success',
    title: 'Producto Agregado',
    text: 'El producto ha sido agregado al carrito exitosamente.',
  });
}

const categorias = document.querySelectorAll(".image77");
categorias.forEach((categoria) => {
  categoria.addEventListener("click", function () {
    agregarProducto(categoria);
  });
});

const cart = [];

document.addEventListener('DOMContentLoaded', () => {
  const productButtons = document.querySelectorAll('.add-to-cart');
  productButtons.forEach(button => {
    button.addEventListener('click', addToCart);
  });

  updateCart();
});

function addToCart(event) {
  const product = event.target.closest('.product');
  const productName = product.dataset.productName;
  const productPrice = parseFloat(product.dataset.productPrice);

  const existingCartItem = cart.find(item => item.productName === productName);

  if (existingCartItem) {
    existingCartItem.quantity++;
  } else {
    cart.push({ productName, productPrice, quantity: 1 });
  }

  updateCart();
  Swal.fire({
    icon: 'success',
    title: 'Carrito Actualizado',
    text: 'El producto ha sido agregado al carrito exitosamente.',
  });
}

function removeFromCart(productName) {
  const index = cart.findIndex(item => item.productName === productName);

  if (index !== -1) {
    cart.splice(index, 1);
  }

  updateCart();
  Swal.fire({
    icon: 'success',
    title: 'Carrito Actualizado',
    text: 'El producto ha sido eliminado del carrito exitosamente.',
  });
}

function updateCart() {
  const cartList = document.getElementById('cart-items');
  cartList.innerHTML = '';

  let total = 0;

  cart.forEach(item => {
    const li = document.createElement('li');
    li.innerHTML = `<div class="cart-product"><span>${item.productName} x${item.quantity}</span> <span>$${(item.productPrice * item.quantity).toFixed(2)}</span> <button class="remove-from-cart" data-product-name="${item.productName}">Eliminar</button></div>`;
    cartList.appendChild(li);
    total += item.productPrice * item.quantity;
  });

  const cartTotal = document.getElementById('cart-total');
  cartTotal.textContent = `$${total.toFixed(2)}`;

  const removeButtons = document.querySelectorAll('.remove-from-cart');
  removeButtons.forEach(button => {
    button.addEventListener('click', () => {
      removeFromCart(button.dataset.productName);
    });
  });
}

// INICIO DE SESIÓN
document.addEventListener('DOMContentLoaded', function () {
  const loginForm = document.getElementById('login-form');
  const loggedInSection = document.getElementById('loggedin');
  const usernameInput = document.getElementById('username');
  const passwordInput = document.getElementById('password');
  const userDisplay = document.getElementById('user');
  const welcomeMessage = document.getElementById('welcome-message');
  const logoutButton = document.getElementById('logout');

  // Comprobar si el usuario ya ha iniciado sesión
  const savedUsername = localStorage.getItem('username');
  if (savedUsername) {
    loginForm.style.display = 'none';
    loggedInSection.style.display = 'block';
    userDisplay.textContent = savedUsername;
    welcomeMessage.textContent = `Bienvenido, ${savedUsername}!`;
  }

  // Manejar el envío del formulario
  loginForm.addEventListener('submit', function (e) {
    e.preventDefault();

    // Cargar datos de usuarios desde el archivo JSON local
    fetch('/node_modules/bootstrap/js/archivo.JSON')
      .then(response => response.json())
      .then(data => {
        const usuarios = data.usuarios;
        const username = usernameInput.value;
        const password = passwordInput.value;

        // Verificar las credenciales con los datos del JSON
        const user = usuarios.find(u => u.nombreUsuario === username && u.contrasena === password);

        if (user) {
          // Almacenar el nombre de usuario en el localStorage
          localStorage.setItem('username', username);

          // Actualizar la interfaz de usuario
          loginForm.style.display = 'none';
          loggedInSection.style.display = 'block';
          userDisplay.textContent = username;
          welcomeMessage.textContent = `Bienvenido, ${username}!`;
          Swal.fire({
            icon: 'success',
            title: 'Inicio de Sesión Exitoso',
            text: `Bienvenido, ${username}! Has iniciado sesión exitosamente.`,
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error de Inicio de Sesión',
            text: 'Credenciales incorrectas. Inténtalo de nuevo.',
          });
        }
      })
      .catch(error => console.error('Error al cargar el archivo JSON:', error));
  });

  // Manejar el cierre de sesión
  logoutButton.addEventListener('click', function () {
    // Eliminar el nombre de usuario del localStorage
    localStorage.removeItem('username');

    // Actualizar la interfaz de usuario
    loginForm.style.display = 'block';
    loggedInSection.style.display = 'none';
    usernameInput.value = '';
    passwordInput.value = '';
    Swal.fire({
      icon: 'success',
      title: 'Cierre de Sesión Exitoso',
      text: 'Has cerrado sesión exitosamente.',
    });
  });
});